<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssf.rp.dao.RpUserPayConfigDao">
  <resultMap id="BaseResultMap" type="com.ssf.rp.model.RpUserPayConfig">
    <id column="rp_user_pay_config_id" jdbcType="VARCHAR" property="id" />
    <result column="rp_user_pay_config_create_time" jdbcType="TIMESTAMP" property="createTime" typeHandler="com.ssf.common.vo.GMT.handler.GMTDateTransHandler" />
    <result column="rp_user_pay_config_edit_time" jdbcType="TIMESTAMP" property="editTime" />
    <result column="rp_user_pay_config_version" jdbcType="BIGINT" property="version" />
    <result column="rp_user_pay_config_remark" jdbcType="VARCHAR" property="remark" />
    <result column="rp_user_pay_config_status" jdbcType="VARCHAR" property="status" />
    <result column="rp_user_pay_config_audit_status" jdbcType="VARCHAR" property="auditStatus" />
    <result column="rp_user_pay_config_is_auto_sett" jdbcType="VARCHAR" property="isAutoSett" />
    <result column="rp_user_pay_config_product_code" jdbcType="VARCHAR" property="productCode" />
    <result column="rp_user_pay_config_product_name" jdbcType="VARCHAR" property="productName" />
    <result column="rp_user_pay_config_user_no" jdbcType="VARCHAR" property="userNo" />
    <result column="rp_user_pay_config_user_name" jdbcType="VARCHAR" property="userName" />
    <result column="rp_user_pay_config_risk_day" jdbcType="INTEGER" property="riskDay" />
    <result column="rp_user_pay_config_pay_key" jdbcType="VARCHAR" property="payKey" />
    <result column="rp_user_pay_config_fund_into_type" jdbcType="VARCHAR" property="fundIntoType" />
    <result column="rp_user_pay_config_pay_secret" jdbcType="VARCHAR" property="paySecret" />
    <result column="rp_user_pay_config_security_rating" jdbcType="VARCHAR" property="securityRating" />
    <result column="rp_user_pay_config_merchant_server_ip" jdbcType="VARCHAR" property="merchantServerIp" />
  </resultMap>
  <sql id="Base_Column_List">
    rp_user_pay_config.id as rp_user_pay_config_id, rp_user_pay_config.create_time as rp_user_pay_config_create_time, 
    rp_user_pay_config.edit_time as rp_user_pay_config_edit_time, rp_user_pay_config.version as rp_user_pay_config_version, 
    rp_user_pay_config.remark as rp_user_pay_config_remark, rp_user_pay_config.status as rp_user_pay_config_status, 
    rp_user_pay_config.audit_status as rp_user_pay_config_audit_status, rp_user_pay_config.is_auto_sett as rp_user_pay_config_is_auto_sett, 
    rp_user_pay_config.product_code as rp_user_pay_config_product_code, rp_user_pay_config.product_name as rp_user_pay_config_product_name, 
    rp_user_pay_config.user_no as rp_user_pay_config_user_no, rp_user_pay_config.user_name as rp_user_pay_config_user_name, 
    rp_user_pay_config.risk_day as rp_user_pay_config_risk_day, rp_user_pay_config.pay_key as rp_user_pay_config_pay_key, 
    rp_user_pay_config.fund_into_type as rp_user_pay_config_fund_into_type, rp_user_pay_config.pay_secret as rp_user_pay_config_pay_secret, 
    rp_user_pay_config.security_rating as rp_user_pay_config_security_rating, rp_user_pay_config.merchant_server_ip as rp_user_pay_config_merchant_server_ip
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from rp_user_pay_config rp_user_pay_config
    where rp_user_pay_config.id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from rp_user_pay_config
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.ssf.rp.model.RpUserPayConfig">
    insert into ${dynamicTableName} (id, create_time,
      edit_time, version, remark, 
      status, audit_status, is_auto_sett, 
      product_code, product_name, user_no, 
      user_name, risk_day, pay_key, 
      fund_into_type, pay_secret, security_rating, 
      merchant_server_ip)
    values (#{id,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP,typeHandler=com.ssf.common.vo.GMT.handler.GMTDateTransHandler}, 
      #{editTime,jdbcType=TIMESTAMP}, #{version,jdbcType=BIGINT}, #{remark,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{auditStatus,jdbcType=VARCHAR}, #{isAutoSett,jdbcType=VARCHAR}, 
      #{productCode,jdbcType=VARCHAR}, #{productName,jdbcType=VARCHAR}, #{userNo,jdbcType=VARCHAR}, 
      #{userName,jdbcType=VARCHAR}, #{riskDay,jdbcType=INTEGER}, #{payKey,jdbcType=VARCHAR}, 
      #{fundIntoType,jdbcType=VARCHAR}, #{paySecret,jdbcType=VARCHAR}, #{securityRating,jdbcType=VARCHAR}, 
      #{merchantServerIp,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ssf.rp.model.RpUserPayConfig">
    insert into ${dynamicTableName}
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="editTime != null">
        edit_time,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="auditStatus != null">
        audit_status,
      </if>
      <if test="isAutoSett != null">
        is_auto_sett,
      </if>
      <if test="productCode != null">
        product_code,
      </if>
      <if test="productName != null">
        product_name,
      </if>
      <if test="userNo != null">
        user_no,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="riskDay != null">
        risk_day,
      </if>
      <if test="payKey != null">
        pay_key,
      </if>
      <if test="fundIntoType != null">
        fund_into_type,
      </if>
      <if test="paySecret != null">
        pay_secret,
      </if>
      <if test="securityRating != null">
        security_rating,
      </if>
      <if test="merchantServerIp != null">
        merchant_server_ip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP,typeHandler=com.ssf.common.vo.GMT.handler.GMTDateTransHandler},
      </if>
      <if test="editTime != null">
        #{editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        #{version,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="auditStatus != null">
        #{auditStatus,jdbcType=VARCHAR},
      </if>
      <if test="isAutoSett != null">
        #{isAutoSett,jdbcType=VARCHAR},
      </if>
      <if test="productCode != null">
        #{productCode,jdbcType=VARCHAR},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="userNo != null">
        #{userNo,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="riskDay != null">
        #{riskDay,jdbcType=INTEGER},
      </if>
      <if test="payKey != null">
        #{payKey,jdbcType=VARCHAR},
      </if>
      <if test="fundIntoType != null">
        #{fundIntoType,jdbcType=VARCHAR},
      </if>
      <if test="paySecret != null">
        #{paySecret,jdbcType=VARCHAR},
      </if>
      <if test="securityRating != null">
        #{securityRating,jdbcType=VARCHAR},
      </if>
      <if test="merchantServerIp != null">
        #{merchantServerIp,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssf.rp.model.RpUserPayConfig">
    update ${dynamicTableName}
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP,typeHandler=com.ssf.common.vo.GMT.handler.GMTDateTransHandler},
      </if>
      <if test="editTime != null">
        edit_time = #{editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="auditStatus != null">
        audit_status = #{auditStatus,jdbcType=VARCHAR},
      </if>
      <if test="isAutoSett != null">
        is_auto_sett = #{isAutoSett,jdbcType=VARCHAR},
      </if>
      <if test="productCode != null">
        product_code = #{productCode,jdbcType=VARCHAR},
      </if>
      <if test="productName != null">
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="userNo != null">
        user_no = #{userNo,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="riskDay != null">
        risk_day = #{riskDay,jdbcType=INTEGER},
      </if>
      <if test="payKey != null">
        pay_key = #{payKey,jdbcType=VARCHAR},
      </if>
      <if test="fundIntoType != null">
        fund_into_type = #{fundIntoType,jdbcType=VARCHAR},
      </if>
      <if test="paySecret != null">
        pay_secret = #{paySecret,jdbcType=VARCHAR},
      </if>
      <if test="securityRating != null">
        security_rating = #{securityRating,jdbcType=VARCHAR},
      </if>
      <if test="merchantServerIp != null">
        merchant_server_ip = #{merchantServerIp,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssf.rp.model.RpUserPayConfig">
    update ${dynamicTableName}
    set create_time = #{createTime,jdbcType=TIMESTAMP,typeHandler=com.ssf.common.vo.GMT.handler.GMTDateTransHandler},
      edit_time = #{editTime,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=BIGINT},
      remark = #{remark,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      audit_status = #{auditStatus,jdbcType=VARCHAR},
      is_auto_sett = #{isAutoSett,jdbcType=VARCHAR},
      product_code = #{productCode,jdbcType=VARCHAR},
      product_name = #{productName,jdbcType=VARCHAR},
      user_no = #{userNo,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      risk_day = #{riskDay,jdbcType=INTEGER},
      pay_key = #{payKey,jdbcType=VARCHAR},
      fund_into_type = #{fundIntoType,jdbcType=VARCHAR},
      pay_secret = #{paySecret,jdbcType=VARCHAR},
      security_rating = #{securityRating,jdbcType=VARCHAR},
      merchant_server_ip = #{merchantServerIp,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="deleteLogicByIds">
    update rp_user_pay_config rp_user_pay_config set deleteFlag = #{deleteFlag,jdbcType=INTEGER} where id in  <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">#{item}</foreach> 
  </update>
  <sql id="OracleDialectPrefix">
    <if test="page != null and databaseId == 'oracle'">
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="OracleDialectSuffix">
    <if test="page != null and databaseId == 'oracle'">
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>
  <sql id="MysqlDialect">
    <if test="page != null and databaseId == 'mysql'">
      limit #{page.begin} , #{page.length}
    </if>
  </sql>
  <select id="selectCountByMap" parameterType="map" resultType="int">
    select count(*) from  <if test="dynamicTableName != null and dynamicTableName != ''"> ${dynamicTableName}  rp_user_pay_config </if><if test="dynamicTableName == null or dynamicTableName == ''"> rp_user_pay_config rp_user_pay_config</if> <include refid="Base_Query_Map_Condition" /> 
  </select>
  <select id="selectListByMap" parameterType="map" resultMap="BaseResultMap">
     <include refid="OracleDialectPrefix" /> select <include refid="Base_Column_List" /> from  <if test="dynamicTableName != null and dynamicTableName != ''"> ${dynamicTableName}  rp_user_pay_config </if><if test="dynamicTableName == null or dynamicTableName == ''"> rp_user_pay_config rp_user_pay_config</if> <include refid="Base_Query_Map_Condition" />  order by  id desc <include refid="OracleDialectSuffix" /><include refid="MysqlDialect" /> 
  </select>
  <sql id="Base_Query_Map_Condition">
    <trim prefix="where" prefixOverrides="and | or">
      <if test="id != null and id != ''">
         AND rp_user_pay_config.id = #{id,jdbcType=VARCHAR}
      </if>
      <if test="createTime != null and createTime != ''">
         AND rp_user_pay_config.create_time = #{createTime,jdbcType=TIMESTAMP,typeHandler=com.ssf.common.vo.GMT.handler.GMTDateTransHandler}
      </if>
      <if test="editTime != null and editTime != ''">
         AND rp_user_pay_config.edit_time = #{editTime,jdbcType=TIMESTAMP}
      </if>
      <if test="version != null and version != ''">
         AND rp_user_pay_config.version = #{version,jdbcType=BIGINT}
      </if>
      <if test="remark != null and remark != ''">
         AND rp_user_pay_config.remark = #{remark,jdbcType=VARCHAR}
      </if>
      <if test="status != null and status != ''">
         AND rp_user_pay_config.status = #{status,jdbcType=VARCHAR}
      </if>
      <if test="auditStatus != null and auditStatus != ''">
         AND rp_user_pay_config.audit_status = #{auditStatus,jdbcType=VARCHAR}
      </if>
      <if test="isAutoSett != null and isAutoSett != ''">
         AND rp_user_pay_config.is_auto_sett = #{isAutoSett,jdbcType=VARCHAR}
      </if>
      <if test="productCode != null and productCode != ''">
         AND rp_user_pay_config.product_code = #{productCode,jdbcType=VARCHAR}
      </if>
      <if test="productName != null and productName != ''">
         AND rp_user_pay_config.product_name = #{productName,jdbcType=VARCHAR}
      </if>
      <if test="userNo != null and userNo != ''">
         AND rp_user_pay_config.user_no = #{userNo,jdbcType=VARCHAR}
      </if>
      <if test="userName != null and userName != ''">
         AND rp_user_pay_config.user_name = #{userName,jdbcType=VARCHAR}
      </if>
      <if test="riskDay != null and riskDay != ''">
         AND rp_user_pay_config.risk_day = #{riskDay,jdbcType=INTEGER}
      </if>
      <if test="payKey != null and payKey != ''">
         AND rp_user_pay_config.pay_key = #{payKey,jdbcType=VARCHAR}
      </if>
      <if test="fundIntoType != null and fundIntoType != ''">
         AND rp_user_pay_config.fund_into_type = #{fundIntoType,jdbcType=VARCHAR}
      </if>
      <if test="paySecret != null and paySecret != ''">
         AND rp_user_pay_config.pay_secret = #{paySecret,jdbcType=VARCHAR}
      </if>
      <if test="securityRating != null and securityRating != ''">
         AND rp_user_pay_config.security_rating = #{securityRating,jdbcType=VARCHAR}
      </if>
      <if test="merchantServerIp != null and merchantServerIp != ''">
         AND rp_user_pay_config.merchant_server_ip = #{merchantServerIp,jdbcType=VARCHAR}
      </if>
      <if test="myGreater_id != null and myGreater_id != ''">
         AND rp_user_pay_config.id &gt; #{myGreater_id,jdbcType=VARCHAR}
      </if>
      <if test="myGreater_createTime != null and myGreater_createTime != ''">
         AND rp_user_pay_config.create_time &gt; #{myGreater_createTime,jdbcType=TIMESTAMP,typeHandler=com.ssf.common.vo.GMT.handler.GMTDateTransHandler}
      </if>
      <if test="myGreater_editTime != null and myGreater_editTime != ''">
         AND rp_user_pay_config.edit_time &gt; #{myGreater_editTime,jdbcType=TIMESTAMP}
      </if>
      <if test="myGreater_version != null and myGreater_version != ''">
         AND rp_user_pay_config.version &gt; #{myGreater_version,jdbcType=BIGINT}
      </if>
      <if test="myGreater_remark != null and myGreater_remark != ''">
         AND rp_user_pay_config.remark &gt; #{myGreater_remark,jdbcType=VARCHAR}
      </if>
      <if test="myGreater_status != null and myGreater_status != ''">
         AND rp_user_pay_config.status &gt; #{myGreater_status,jdbcType=VARCHAR}
      </if>
      <if test="myGreater_auditStatus != null and myGreater_auditStatus != ''">
         AND rp_user_pay_config.audit_status &gt; #{myGreater_auditStatus,jdbcType=VARCHAR}
      </if>
      <if test="myGreater_isAutoSett != null and myGreater_isAutoSett != ''">
         AND rp_user_pay_config.is_auto_sett &gt; #{myGreater_isAutoSett,jdbcType=VARCHAR}
      </if>
      <if test="myGreater_productCode != null and myGreater_productCode != ''">
         AND rp_user_pay_config.product_code &gt; #{myGreater_productCode,jdbcType=VARCHAR}
      </if>
      <if test="myGreater_productName != null and myGreater_productName != ''">
         AND rp_user_pay_config.product_name &gt; #{myGreater_productName,jdbcType=VARCHAR}
      </if>
      <if test="myGreater_userNo != null and myGreater_userNo != ''">
         AND rp_user_pay_config.user_no &gt; #{myGreater_userNo,jdbcType=VARCHAR}
      </if>
      <if test="myGreater_userName != null and myGreater_userName != ''">
         AND rp_user_pay_config.user_name &gt; #{myGreater_userName,jdbcType=VARCHAR}
      </if>
      <if test="myGreater_riskDay != null and myGreater_riskDay != ''">
         AND rp_user_pay_config.risk_day &gt; #{myGreater_riskDay,jdbcType=INTEGER}
      </if>
      <if test="myGreater_payKey != null and myGreater_payKey != ''">
         AND rp_user_pay_config.pay_key &gt; #{myGreater_payKey,jdbcType=VARCHAR}
      </if>
      <if test="myGreater_fundIntoType != null and myGreater_fundIntoType != ''">
         AND rp_user_pay_config.fund_into_type &gt; #{myGreater_fundIntoType,jdbcType=VARCHAR}
      </if>
      <if test="myGreater_paySecret != null and myGreater_paySecret != ''">
         AND rp_user_pay_config.pay_secret &gt; #{myGreater_paySecret,jdbcType=VARCHAR}
      </if>
      <if test="myGreater_securityRating != null and myGreater_securityRating != ''">
         AND rp_user_pay_config.security_rating &gt; #{myGreater_securityRating,jdbcType=VARCHAR}
      </if>
      <if test="myGreater_merchantServerIp != null and myGreater_merchantServerIp != ''">
         AND rp_user_pay_config.merchant_server_ip &gt; #{myGreater_merchantServerIp,jdbcType=VARCHAR}
      </if>
      <if test="myLesser_id != null and myLesser_id != ''">
         AND rp_user_pay_config.id &lt; #{myLesser_id,jdbcType=VARCHAR}
      </if>
      <if test="myLesser_createTime != null and myLesser_createTime != ''">
         AND rp_user_pay_config.create_time &lt; #{myLesser_createTime,jdbcType=TIMESTAMP,typeHandler=com.ssf.common.vo.GMT.handler.GMTDateTransHandler}
      </if>
      <if test="myLesser_editTime != null and myLesser_editTime != ''">
         AND rp_user_pay_config.edit_time &lt; #{myLesser_editTime,jdbcType=TIMESTAMP}
      </if>
      <if test="myLesser_version != null and myLesser_version != ''">
         AND rp_user_pay_config.version &lt; #{myLesser_version,jdbcType=BIGINT}
      </if>
      <if test="myLesser_remark != null and myLesser_remark != ''">
         AND rp_user_pay_config.remark &lt; #{myLesser_remark,jdbcType=VARCHAR}
      </if>
      <if test="myLesser_status != null and myLesser_status != ''">
         AND rp_user_pay_config.status &lt; #{myLesser_status,jdbcType=VARCHAR}
      </if>
      <if test="myLesser_auditStatus != null and myLesser_auditStatus != ''">
         AND rp_user_pay_config.audit_status &lt; #{myLesser_auditStatus,jdbcType=VARCHAR}
      </if>
      <if test="myLesser_isAutoSett != null and myLesser_isAutoSett != ''">
         AND rp_user_pay_config.is_auto_sett &lt; #{myLesser_isAutoSett,jdbcType=VARCHAR}
      </if>
      <if test="myLesser_productCode != null and myLesser_productCode != ''">
         AND rp_user_pay_config.product_code &lt; #{myLesser_productCode,jdbcType=VARCHAR}
      </if>
      <if test="myLesser_productName != null and myLesser_productName != ''">
         AND rp_user_pay_config.product_name &lt; #{myLesser_productName,jdbcType=VARCHAR}
      </if>
      <if test="myLesser_userNo != null and myLesser_userNo != ''">
         AND rp_user_pay_config.user_no &lt; #{myLesser_userNo,jdbcType=VARCHAR}
      </if>
      <if test="myLesser_userName != null and myLesser_userName != ''">
         AND rp_user_pay_config.user_name &lt; #{myLesser_userName,jdbcType=VARCHAR}
      </if>
      <if test="myLesser_riskDay != null and myLesser_riskDay != ''">
         AND rp_user_pay_config.risk_day &lt; #{myLesser_riskDay,jdbcType=INTEGER}
      </if>
      <if test="myLesser_payKey != null and myLesser_payKey != ''">
         AND rp_user_pay_config.pay_key &lt; #{myLesser_payKey,jdbcType=VARCHAR}
      </if>
      <if test="myLesser_fundIntoType != null and myLesser_fundIntoType != ''">
         AND rp_user_pay_config.fund_into_type &lt; #{myLesser_fundIntoType,jdbcType=VARCHAR}
      </if>
      <if test="myLesser_paySecret != null and myLesser_paySecret != ''">
         AND rp_user_pay_config.pay_secret &lt; #{myLesser_paySecret,jdbcType=VARCHAR}
      </if>
      <if test="myLesser_securityRating != null and myLesser_securityRating != ''">
         AND rp_user_pay_config.security_rating &lt; #{myLesser_securityRating,jdbcType=VARCHAR}
      </if>
      <if test="myLesser_merchantServerIp != null and myLesser_merchantServerIp != ''">
         AND rp_user_pay_config.merchant_server_ip &lt; #{myLesser_merchantServerIp,jdbcType=VARCHAR}
      </if>
      <if test="myLike_id != null and myLike_id != ''">
         AND rp_user_pay_config.id like CONCAT('%', #{myLike_id,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLike_createTime != null and myLike_createTime != ''">
         AND rp_user_pay_config.create_time like CONCAT('%', #{myLike_createTime,jdbcType=TIMESTAMP,typeHandler=com.ssf.common.vo.GMT.handler.GMTDateTransHandler},'%' )
      </if>
      <if test="myLike_editTime != null and myLike_editTime != ''">
         AND rp_user_pay_config.edit_time like CONCAT('%', #{myLike_editTime,jdbcType=TIMESTAMP},'%' )
      </if>
      <if test="myLike_version != null and myLike_version != ''">
         AND rp_user_pay_config.version like CONCAT('%', #{myLike_version,jdbcType=BIGINT},'%' )
      </if>
      <if test="myLike_remark != null and myLike_remark != ''">
         AND rp_user_pay_config.remark like CONCAT('%', #{myLike_remark,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLike_status != null and myLike_status != ''">
         AND rp_user_pay_config.status like CONCAT('%', #{myLike_status,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLike_auditStatus != null and myLike_auditStatus != ''">
         AND rp_user_pay_config.audit_status like CONCAT('%', #{myLike_auditStatus,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLike_isAutoSett != null and myLike_isAutoSett != ''">
         AND rp_user_pay_config.is_auto_sett like CONCAT('%', #{myLike_isAutoSett,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLike_productCode != null and myLike_productCode != ''">
         AND rp_user_pay_config.product_code like CONCAT('%', #{myLike_productCode,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLike_productName != null and myLike_productName != ''">
         AND rp_user_pay_config.product_name like CONCAT('%', #{myLike_productName,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLike_userNo != null and myLike_userNo != ''">
         AND rp_user_pay_config.user_no like CONCAT('%', #{myLike_userNo,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLike_userName != null and myLike_userName != ''">
         AND rp_user_pay_config.user_name like CONCAT('%', #{myLike_userName,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLike_riskDay != null and myLike_riskDay != ''">
         AND rp_user_pay_config.risk_day like CONCAT('%', #{myLike_riskDay,jdbcType=INTEGER},'%' )
      </if>
      <if test="myLike_payKey != null and myLike_payKey != ''">
         AND rp_user_pay_config.pay_key like CONCAT('%', #{myLike_payKey,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLike_fundIntoType != null and myLike_fundIntoType != ''">
         AND rp_user_pay_config.fund_into_type like CONCAT('%', #{myLike_fundIntoType,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLike_paySecret != null and myLike_paySecret != ''">
         AND rp_user_pay_config.pay_secret like CONCAT('%', #{myLike_paySecret,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLike_securityRating != null and myLike_securityRating != ''">
         AND rp_user_pay_config.security_rating like CONCAT('%', #{myLike_securityRating,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLike_merchantServerIp != null and myLike_merchantServerIp != ''">
         AND rp_user_pay_config.merchant_server_ip like CONCAT('%', #{myLike_merchantServerIp,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLikeStart_id != null and myLikeStart_id != ''">
         AND rp_user_pay_config.id like CONCAT('%', #{myLikeStart_id,jdbcType=VARCHAR})
      </if>
      <if test="myLikeStart_createTime != null and myLikeStart_createTime != ''">
         AND rp_user_pay_config.create_time like CONCAT('%', #{myLikeStart_createTime,jdbcType=TIMESTAMP,typeHandler=com.ssf.common.vo.GMT.handler.GMTDateTransHandler})
      </if>
      <if test="myLikeStart_editTime != null and myLikeStart_editTime != ''">
         AND rp_user_pay_config.edit_time like CONCAT('%', #{myLikeStart_editTime,jdbcType=TIMESTAMP})
      </if>
      <if test="myLikeStart_version != null and myLikeStart_version != ''">
         AND rp_user_pay_config.version like CONCAT('%', #{myLikeStart_version,jdbcType=BIGINT})
      </if>
      <if test="myLikeStart_remark != null and myLikeStart_remark != ''">
         AND rp_user_pay_config.remark like CONCAT('%', #{myLikeStart_remark,jdbcType=VARCHAR})
      </if>
      <if test="myLikeStart_status != null and myLikeStart_status != ''">
         AND rp_user_pay_config.status like CONCAT('%', #{myLikeStart_status,jdbcType=VARCHAR})
      </if>
      <if test="myLikeStart_auditStatus != null and myLikeStart_auditStatus != ''">
         AND rp_user_pay_config.audit_status like CONCAT('%', #{myLikeStart_auditStatus,jdbcType=VARCHAR})
      </if>
      <if test="myLikeStart_isAutoSett != null and myLikeStart_isAutoSett != ''">
         AND rp_user_pay_config.is_auto_sett like CONCAT('%', #{myLikeStart_isAutoSett,jdbcType=VARCHAR})
      </if>
      <if test="myLikeStart_productCode != null and myLikeStart_productCode != ''">
         AND rp_user_pay_config.product_code like CONCAT('%', #{myLikeStart_productCode,jdbcType=VARCHAR})
      </if>
      <if test="myLikeStart_productName != null and myLikeStart_productName != ''">
         AND rp_user_pay_config.product_name like CONCAT('%', #{myLikeStart_productName,jdbcType=VARCHAR})
      </if>
      <if test="myLikeStart_userNo != null and myLikeStart_userNo != ''">
         AND rp_user_pay_config.user_no like CONCAT('%', #{myLikeStart_userNo,jdbcType=VARCHAR})
      </if>
      <if test="myLikeStart_userName != null and myLikeStart_userName != ''">
         AND rp_user_pay_config.user_name like CONCAT('%', #{myLikeStart_userName,jdbcType=VARCHAR})
      </if>
      <if test="myLikeStart_riskDay != null and myLikeStart_riskDay != ''">
         AND rp_user_pay_config.risk_day like CONCAT('%', #{myLikeStart_riskDay,jdbcType=INTEGER})
      </if>
      <if test="myLikeStart_payKey != null and myLikeStart_payKey != ''">
         AND rp_user_pay_config.pay_key like CONCAT('%', #{myLikeStart_payKey,jdbcType=VARCHAR})
      </if>
      <if test="myLikeStart_fundIntoType != null and myLikeStart_fundIntoType != ''">
         AND rp_user_pay_config.fund_into_type like CONCAT('%', #{myLikeStart_fundIntoType,jdbcType=VARCHAR})
      </if>
      <if test="myLikeStart_paySecret != null and myLikeStart_paySecret != ''">
         AND rp_user_pay_config.pay_secret like CONCAT('%', #{myLikeStart_paySecret,jdbcType=VARCHAR})
      </if>
      <if test="myLikeStart_securityRating != null and myLikeStart_securityRating != ''">
         AND rp_user_pay_config.security_rating like CONCAT('%', #{myLikeStart_securityRating,jdbcType=VARCHAR})
      </if>
      <if test="myLikeStart_merchantServerIp != null and myLikeStart_merchantServerIp != ''">
         AND rp_user_pay_config.merchant_server_ip like CONCAT('%', #{myLikeStart_merchantServerIp,jdbcType=VARCHAR})
      </if>
      <if test="myLikeEnd_id != null and myLikeEnd_id != ''">
         AND rp_user_pay_config.id like CONCAT( #{myLikeEnd_id,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLikeEnd_createTime != null and myLikeEnd_createTime != ''">
         AND rp_user_pay_config.create_time like CONCAT( #{myLikeEnd_createTime,jdbcType=TIMESTAMP,typeHandler=com.ssf.common.vo.GMT.handler.GMTDateTransHandler},'%' )
      </if>
      <if test="myLikeEnd_editTime != null and myLikeEnd_editTime != ''">
         AND rp_user_pay_config.edit_time like CONCAT( #{myLikeEnd_editTime,jdbcType=TIMESTAMP},'%' )
      </if>
      <if test="myLikeEnd_version != null and myLikeEnd_version != ''">
         AND rp_user_pay_config.version like CONCAT( #{myLikeEnd_version,jdbcType=BIGINT},'%' )
      </if>
      <if test="myLikeEnd_remark != null and myLikeEnd_remark != ''">
         AND rp_user_pay_config.remark like CONCAT( #{myLikeEnd_remark,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLikeEnd_status != null and myLikeEnd_status != ''">
         AND rp_user_pay_config.status like CONCAT( #{myLikeEnd_status,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLikeEnd_auditStatus != null and myLikeEnd_auditStatus != ''">
         AND rp_user_pay_config.audit_status like CONCAT( #{myLikeEnd_auditStatus,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLikeEnd_isAutoSett != null and myLikeEnd_isAutoSett != ''">
         AND rp_user_pay_config.is_auto_sett like CONCAT( #{myLikeEnd_isAutoSett,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLikeEnd_productCode != null and myLikeEnd_productCode != ''">
         AND rp_user_pay_config.product_code like CONCAT( #{myLikeEnd_productCode,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLikeEnd_productName != null and myLikeEnd_productName != ''">
         AND rp_user_pay_config.product_name like CONCAT( #{myLikeEnd_productName,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLikeEnd_userNo != null and myLikeEnd_userNo != ''">
         AND rp_user_pay_config.user_no like CONCAT( #{myLikeEnd_userNo,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLikeEnd_userName != null and myLikeEnd_userName != ''">
         AND rp_user_pay_config.user_name like CONCAT( #{myLikeEnd_userName,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLikeEnd_riskDay != null and myLikeEnd_riskDay != ''">
         AND rp_user_pay_config.risk_day like CONCAT( #{myLikeEnd_riskDay,jdbcType=INTEGER},'%' )
      </if>
      <if test="myLikeEnd_payKey != null and myLikeEnd_payKey != ''">
         AND rp_user_pay_config.pay_key like CONCAT( #{myLikeEnd_payKey,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLikeEnd_fundIntoType != null and myLikeEnd_fundIntoType != ''">
         AND rp_user_pay_config.fund_into_type like CONCAT( #{myLikeEnd_fundIntoType,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLikeEnd_paySecret != null and myLikeEnd_paySecret != ''">
         AND rp_user_pay_config.pay_secret like CONCAT( #{myLikeEnd_paySecret,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLikeEnd_securityRating != null and myLikeEnd_securityRating != ''">
         AND rp_user_pay_config.security_rating like CONCAT( #{myLikeEnd_securityRating,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLikeEnd_merchantServerIp != null and myLikeEnd_merchantServerIp != ''">
         AND rp_user_pay_config.merchant_server_ip like CONCAT( #{myLikeEnd_merchantServerIp,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myIn_id != null and myIn_id != ''">
         AND rp_user_pay_config.id in <foreach item="item" index="index" collection="myIn_id" open="(" separator="," close=")"> #{item} </foreach>
      </if>
      <if test="myIn_createTime != null and myIn_createTime != ''">
         AND rp_user_pay_config.create_time in <foreach item="item" index="index" collection="myIn_createTime" open="(" separator="," close=")"> #{item} </foreach>
      </if>
      <if test="myIn_editTime != null and myIn_editTime != ''">
         AND rp_user_pay_config.edit_time in <foreach item="item" index="index" collection="myIn_editTime" open="(" separator="," close=")"> #{item} </foreach>
      </if>
      <if test="myIn_version != null and myIn_version != ''">
         AND rp_user_pay_config.version in <foreach item="item" index="index" collection="myIn_version" open="(" separator="," close=")"> #{item} </foreach>
      </if>
      <if test="myIn_remark != null and myIn_remark != ''">
         AND rp_user_pay_config.remark in <foreach item="item" index="index" collection="myIn_remark" open="(" separator="," close=")"> #{item} </foreach>
      </if>
      <if test="myIn_status != null and myIn_status != ''">
         AND rp_user_pay_config.status in <foreach item="item" index="index" collection="myIn_status" open="(" separator="," close=")"> #{item} </foreach>
      </if>
      <if test="myIn_auditStatus != null and myIn_auditStatus != ''">
         AND rp_user_pay_config.audit_status in <foreach item="item" index="index" collection="myIn_auditStatus" open="(" separator="," close=")"> #{item} </foreach>
      </if>
      <if test="myIn_isAutoSett != null and myIn_isAutoSett != ''">
         AND rp_user_pay_config.is_auto_sett in <foreach item="item" index="index" collection="myIn_isAutoSett" open="(" separator="," close=")"> #{item} </foreach>
      </if>
      <if test="myIn_productCode != null and myIn_productCode != ''">
         AND rp_user_pay_config.product_code in <foreach item="item" index="index" collection="myIn_productCode" open="(" separator="," close=")"> #{item} </foreach>
      </if>
      <if test="myIn_productName != null and myIn_productName != ''">
         AND rp_user_pay_config.product_name in <foreach item="item" index="index" collection="myIn_productName" open="(" separator="," close=")"> #{item} </foreach>
      </if>
      <if test="myIn_userNo != null and myIn_userNo != ''">
         AND rp_user_pay_config.user_no in <foreach item="item" index="index" collection="myIn_userNo" open="(" separator="," close=")"> #{item} </foreach>
      </if>
      <if test="myIn_userName != null and myIn_userName != ''">
         AND rp_user_pay_config.user_name in <foreach item="item" index="index" collection="myIn_userName" open="(" separator="," close=")"> #{item} </foreach>
      </if>
      <if test="myIn_riskDay != null and myIn_riskDay != ''">
         AND rp_user_pay_config.risk_day in <foreach item="item" index="index" collection="myIn_riskDay" open="(" separator="," close=")"> #{item} </foreach>
      </if>
      <if test="myIn_payKey != null and myIn_payKey != ''">
         AND rp_user_pay_config.pay_key in <foreach item="item" index="index" collection="myIn_payKey" open="(" separator="," close=")"> #{item} </foreach>
      </if>
      <if test="myIn_fundIntoType != null and myIn_fundIntoType != ''">
         AND rp_user_pay_config.fund_into_type in <foreach item="item" index="index" collection="myIn_fundIntoType" open="(" separator="," close=")"> #{item} </foreach>
      </if>
      <if test="myIn_paySecret != null and myIn_paySecret != ''">
         AND rp_user_pay_config.pay_secret in <foreach item="item" index="index" collection="myIn_paySecret" open="(" separator="," close=")"> #{item} </foreach>
      </if>
      <if test="myIn_securityRating != null and myIn_securityRating != ''">
         AND rp_user_pay_config.security_rating in <foreach item="item" index="index" collection="myIn_securityRating" open="(" separator="," close=")"> #{item} </foreach>
      </if>
      <if test="myIn_merchantServerIp != null and myIn_merchantServerIp != ''">
         AND rp_user_pay_config.merchant_server_ip in <foreach item="item" index="index" collection="myIn_merchantServerIp" open="(" separator="," close=")"> #{item} </foreach>
      </if>
    </trim>
  </sql>
  <select id="selectByPrimaryKeyAndTableName" parameterType="String" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from ${dynamicTableName}  rp_user_pay_config where rp_user_pay_config.id = #{id, jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKeyAndTableName" parameterType="String">
    delete from ${dynamicTableName} where id = #{id, jdbcType=VARCHAR}
  </delete>
</mapper>