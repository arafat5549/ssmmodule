<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssf.sys.dao.SysReUserAppDao">
  <resultMap id="BaseResultMap" type="com.ssf.sys.model.SysReUserApp">
    <id column="sys_re_user_app_id" jdbcType="INTEGER" property="id" />
    <result column="sys_re_user_app_userId" jdbcType="INTEGER" property="userid" />
    <result column="sys_re_user_app_appId" jdbcType="INTEGER" property="appid" />
  </resultMap>
  <sql id="Base_Column_List">
    sys_re_user_app.id as sys_re_user_app_id, sys_re_user_app.userId as sys_re_user_app_userId, 
    sys_re_user_app.appId as sys_re_user_app_appId
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_re_user_app sys_re_user_app
    where sys_re_user_app.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_re_user_app
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ssf.sys.model.SysReUserApp">
    insert into sys_re_user_app (id, userId, appId
      )
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{appid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ssf.sys.model.SysReUserApp">
    insert into sys_re_user_app
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="appid != null">
        appId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="appid != null">
        #{appid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssf.sys.model.SysReUserApp">
    update sys_re_user_app
    <set>
      <if test="userid != null">
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="appid != null">
        appId = #{appid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssf.sys.model.SysReUserApp">
    update sys_re_user_app
    set userId = #{userid,jdbcType=INTEGER},
      appId = #{appid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="deleteLogicByIds">
    update sys_re_user_app sys_re_user_app set deleteFlag = #{deleteFlag,jdbcType=INTEGER} where id in  <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">#{item}</foreach> 
  </update>
  <sql id="OracleDialectPrefix">
    <if test="page != null and databaseId == 'oracle'">
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="OracleDialectSuffix">
    <if test="page != null and databaseId == 'oracle'">
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>
  <sql id="MysqlDialect">
    <if test="page != null and databaseId == 'mysql'">
      limit #{page.begin} , #{page.length}
    </if>
  </sql>
  <select id="selectCountByMap" parameterType="map" resultType="int">
    select count(*) from  <if test="dynamicTableName != null and dynamicTableName != ''"> ${dynamicTableName}  sys_re_user_app </if><if test="dynamicTableName == null or dynamicTableName == ''"> sys_re_user_app sys_re_user_app</if> <include refid="Base_Query_Map_Condition" /> 
  </select>
  <select id="selectListByMap" parameterType="map" resultMap="BaseResultMap">
     <include refid="OracleDialectPrefix" /> select <include refid="Base_Column_List" /> from  <if test="dynamicTableName != null and dynamicTableName != ''"> ${dynamicTableName}  sys_re_user_app </if><if test="dynamicTableName == null or dynamicTableName == ''"> sys_re_user_app sys_re_user_app</if> <include refid="Base_Query_Map_Condition" />  order by  id desc <include refid="OracleDialectSuffix" /><include refid="MysqlDialect" /> 
  </select>
  <sql id="Base_Query_Map_Condition">
    <trim prefix="where" prefixOverrides="and | or">
      <if test="id != null and id != ''">
         AND sys_re_user_app.id = #{id,jdbcType=INTEGER}
      </if>
      <if test="userid != null and userid != ''">
         AND sys_re_user_app.userId = #{userid,jdbcType=INTEGER}
      </if>
      <if test="appid != null and appid != ''">
         AND sys_re_user_app.appId = #{appid,jdbcType=INTEGER}
      </if>
      <if test="myGreater_id != null and myGreater_id != ''">
         AND sys_re_user_app.id &gt; #{myGreater_id,jdbcType=INTEGER}
      </if>
      <if test="myGreater_userid != null and myGreater_userid != ''">
         AND sys_re_user_app.userId &gt; #{myGreater_userid,jdbcType=INTEGER}
      </if>
      <if test="myGreater_appid != null and myGreater_appid != ''">
         AND sys_re_user_app.appId &gt; #{myGreater_appid,jdbcType=INTEGER}
      </if>
      <if test="myLesser_id != null and myLesser_id != ''">
         AND sys_re_user_app.id &lt; #{myLesser_id,jdbcType=INTEGER}
      </if>
      <if test="myLesser_userid != null and myLesser_userid != ''">
         AND sys_re_user_app.userId &lt; #{myLesser_userid,jdbcType=INTEGER}
      </if>
      <if test="myLesser_appid != null and myLesser_appid != ''">
         AND sys_re_user_app.appId &lt; #{myLesser_appid,jdbcType=INTEGER}
      </if>
      <if test="myLike_id != null and myLike_id != ''">
         AND sys_re_user_app.id like CONCAT('%', #{myLike_id,jdbcType=INTEGER},'%' )
      </if>
      <if test="myLike_userid != null and myLike_userid != ''">
         AND sys_re_user_app.userId like CONCAT('%', #{myLike_userid,jdbcType=INTEGER},'%' )
      </if>
      <if test="myLike_appid != null and myLike_appid != ''">
         AND sys_re_user_app.appId like CONCAT('%', #{myLike_appid,jdbcType=INTEGER},'%' )
      </if>
      <if test="myLikeStart_id != null and myLikeStart_id != ''">
         AND sys_re_user_app.id like CONCAT('%', #{myLikeStart_id,jdbcType=INTEGER})
      </if>
      <if test="myLikeStart_userid != null and myLikeStart_userid != ''">
         AND sys_re_user_app.userId like CONCAT('%', #{myLikeStart_userid,jdbcType=INTEGER})
      </if>
      <if test="myLikeStart_appid != null and myLikeStart_appid != ''">
         AND sys_re_user_app.appId like CONCAT('%', #{myLikeStart_appid,jdbcType=INTEGER})
      </if>
      <if test="myLikeEnd_id != null and myLikeEnd_id != ''">
         AND sys_re_user_app.id like CONCAT( #{myLikeEnd_id,jdbcType=INTEGER},'%' )
      </if>
      <if test="myLikeEnd_userid != null and myLikeEnd_userid != ''">
         AND sys_re_user_app.userId like CONCAT( #{myLikeEnd_userid,jdbcType=INTEGER},'%' )
      </if>
      <if test="myLikeEnd_appid != null and myLikeEnd_appid != ''">
         AND sys_re_user_app.appId like CONCAT( #{myLikeEnd_appid,jdbcType=INTEGER},'%' )
      </if>
      <if test="myIn_id != null and myIn_id != ''">
         AND sys_re_user_app.id in <foreach item="item" index="index" collection="myIn_id" open="(" separator="," close=")"> #{item} </foreach>
      </if>
      <if test="myIn_userid != null and myIn_userid != ''">
         AND sys_re_user_app.userId in <foreach item="item" index="index" collection="myIn_userid" open="(" separator="," close=")"> #{item} </foreach>
      </if>
      <if test="myIn_appid != null and myIn_appid != ''">
         AND sys_re_user_app.appId in <foreach item="item" index="index" collection="myIn_appid" open="(" separator="," close=")"> #{item} </foreach>
      </if>
    </trim>
  </sql>
</mapper>